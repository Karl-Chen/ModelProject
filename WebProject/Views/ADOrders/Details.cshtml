@model WebProject.ViewModels.VMOrderDetail

@{
    ViewData["Title"] = "訂單名細";
}


<div class="row mt-3">
    <div class="col-2">
        <div id="ADOrderOptList">
            @* //2.3.10 編寫Display View，加入VCReBooks ViewComponent *@
            @await Component.InvokeAsync("ADOrderOpt", new { })
        </div>
    </div>
    <div class="col-10">
        @{
            var title = ViewBag.OrderNo + ViewBag.Title;
        }
        <h1>@title</h1>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.item.FirstOrDefault().img)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.item.FirstOrDefault().name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.item.FirstOrDefault().price)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.item.FirstOrDefault().count)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (Model.item.Count <= 0)
                {
                    <h1 class="text-danger"><i class="bi bi-cart4"></i> @ViewBag.ErrMsg <i class="bi bi-cart4"></i></h1>
                }
                else
                {
                    @foreach (var item in Model.item)
                    {
                        <tr>
                            <td>
                                @if (item.img != null)
                                {
                                    <img src="~/ModelPhoto/@item.img" style="max-height:80px; width:auto;" />
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.price)

                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.count)
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<div class="row">
    <div class="col-xl-8 col-lg-3"></div>
    <div class="col-xl-4 col-lg-9 d-flex justify-content-between fs-3">
        <span>最後@(Html.DisplayNameFor(modelItem => modelItem.HandleMember)) </span>
        <span>@Model.HandleMember</span>
    </div>
    <div class="col-xl-8 col-lg-3"></div>
    <div class="col-xl-4 col-lg-9 d-flex justify-content-between fs-3">
        <span style="white-space: nowrap;">最後@(Html.DisplayNameFor(modelItem => modelItem.HandleDate)) </span>
        <span class="text-end">@Model.HandleDate</span>
    </div>
    <div class="col-xl-8 col-lg-3"></div>
    <div class="col-xl-4 col-lg-9 d-flex justify-content-between fs-3">
        <span style="white-space: nowrap;">@(Html.DisplayNameFor(modelItem => modelItem.InvoiceID)) </span>
        <span class="text-end">@Model.InvoiceID</span>
    </div>
    <div class="col-xl-8 col-lg-3"></div>
    <div class="col-xl-4 col-lg-9 d-flex justify-content-between fs-3">
        <span>@(Html.DisplayNameFor(modelItem => modelItem.sendWay)) </span>
        <span>@Model.sendWay</span>
    </div>
    <div class="col-xl-8 col-lg-3"></div>
    <div class="col-xl-4 col-lg-9 d-flex justify-content-between fs-3">
        <span>@(Html.DisplayNameFor(modelItem => modelItem.isFix)) </span>
        @{
            var tmp = Model.isFix == "1" ? 60 : 0;
        }
        <span>@tmp.ToString("N0") 元</span>
    </div>
    <div class="col-xl-8 col-lg-3"></div>
    <div class="col-xl-4 col-lg-9 d-flex justify-content-between fs-3">
        <span>@(Html.DisplayNameFor(modelItem => modelItem.OrderDate)) </span>
        <span>@Html.DisplayFor(modelItem => modelItem.OrderDate)</span>
    </div>
    <div class="col-xl-8 col-lg-3"></div>
    <div class="col-xl-4 col-lg-9 d-flex justify-content-between fs-3">
        <span>@(Html.DisplayNameFor(modelItem => modelItem.ShippingDate)) </span>
        <span>@(Model.ShippingDate.HasValue ? Model.ShippingDate.Value.ToString("yyyy/MM/dd") : "還沒出貨")</span>
    </div>
    <div class="col-xl-8 col-lg-3"></div>
    <div class="col-xl-4 col-lg-9 d-flex justify-content-between fs-3">
        @{
            var sendMoney = Model.sendWay == "自取" ? 0 : 60;
        }
        <span>運費</span>
        <span>@sendMoney.ToString("N0") 元</span>
    </div>
    <div class="col-xl-8 col-lg-3"></div>
    <div class="col-xl-4 col-lg-9 d-flex justify-content-between fs-3">
        <span style="white-space: nowrap;">@(Html.DisplayNameFor(modelItem => modelItem.ShippingAddr))</span>
        <span>@Model.ShippingAddr</span>
    </div>
    <div class="col-xl-8 col-lg-3"></div>
    <div class="col-xl-4 col-lg-9 d-flex justify-content-between fs-3">
        <span style="white-space: nowrap;">@(Html.DisplayNameFor(modelItem => modelItem.OrderName))</span>
        <span>@Model.OrderName</span>
    </div>
    <div class="col-xl-8 col-lg-3"></div>
    <div class="col-xl-4 col-lg-9 d-flex justify-content-between fs-3">
        <span style="white-space: nowrap;">@(Html.DisplayNameFor(modelItem => modelItem.OrderPhone))</span>
        <span>@Model.OrderPhone</span>
    </div>
    <div class="col-xl-8 col-lg-3 "></div>
    <div class="col-xl-4 col-lg-9 d-flex justify-content-between fs-3 ">
        <span>總金額</span>
        @{
            var total = sendMoney + tmp;
            foreach (var it in Model.item)
            {
                total += it.price * it.count;
            }
        }
        <span>@total.ToString("N0") 元</span>
    </div>
</div>