@model WebProject.ViewModels.VMProducts

@{
    ViewData["Title"] = "商品列表";
    var price = 0;
}

<div class="row mt-3">
    <div class="col-3">
        <div id="ProductTypeList">
            @* //2.3.10 編寫Display View，加入VCReBooks ViewComponent *@
            @await Component.InvokeAsync("VCProductType", new { })
        </div>
</div>
<div class="col-9">
    @* 學生資料 *@
    @* <h3 class="text-center"><span class="alert-danger">@ViewBag.DeptName</span>學生資料管理</h3> *@
    @* <p> *@
    @*     <a class="btn btn-info" asp-route-deptid="@ViewBag.DeptID" asp-action="Create">新增學生資料</a> *@
    @* </p> *@
    
    @if (Model.Products.Count() == 0)
    {
        <h1 class="text-danger text-center">@ViewData["ErrMsg"]</h1>
    }
    else
    {
        <div class="row">
            @foreach (var item in Model.Products)
            {
                <div class="col-xl-4">
                        <a style="text-decoration: none" asp-action="Details" asp-route-id="@item.ProductID">
                        <div class="card mb-4 border-info">
                            
                            @if (item.Photo != null)
                            {
                                    <img src="~/ModelPhoto/@item.Photo" class="card-img-top border border-bottom " style="max-height:280px width:auto" />
                            }
                            <div class="card-body">
                                <h4 class="text-black"> @item.ProductName</h4>
                                <p class="text-black-50">@Html.Raw(item.Description.Replace("\r\n", "<br>"))</p>
                            </div>
                            <div class="card-footer">
                                <h3 class="text-end text-black">
                                    @{
                                        var value = item.CostJP * item.PriceExchangeRage;
                                        price = (int)(value);
                                    }
                                        @(price.ToString("N0")) 元
                                </h3>
                            </div>    
                        </div>
                    </a>
                </div>
            }
        </div>
    }
</div>
</div>
@* <p> *@
@*     <a asp-action="Create">Create New</a> *@
@* </p> *@
@* <table class="table"> *@
@*     <thead> *@
@*         <tr> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.ProductName) *@
@*             </th> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.Description) *@
@*             </th> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.Photo) *@
@*             </th> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.CostJP) *@
@*             </th> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.CostExchangeRate) *@
@*             </th> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.PriceExchangeRage) *@
@*             </th> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.Inventory) *@
@*             </th> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.OrderedQuantity) *@
@*             </th> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.ProductType) *@
@*             </th> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.ProductSpecification) *@
@*             </th> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.Brand) *@
@*             </th> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.Supplier) *@
@*             </th> *@
@*             <th></th> *@
@*         </tr> *@
@*     </thead> *@
@*     <tbody> *@
@* @foreach (var item in Model) { *@
@*         <tr> *@
@*             <td> *@
@*                 @Html.DisplayFor(modelItem => item.ProductName) *@
@*             </td> *@
@*             <td> *@
@*                 @Html.DisplayFor(modelItem => item.Description) *@
@*             </td> *@
@*             <td> *@
@*                 @Html.DisplayFor(modelItem => item.Photo) *@
@*             </td> *@
@*             <td> *@
@*                 @Html.DisplayFor(modelItem => item.CostJP) *@
@*             </td> *@
@*             <td> *@
@*                 @Html.DisplayFor(modelItem => item.CostExchangeRate) *@
@*             </td> *@
@*             <td> *@
@*                 @Html.DisplayFor(modelItem => item.PriceExchangeRage) *@
@*             </td> *@
@*             <td> *@
@*                 @Html.DisplayFor(modelItem => item.Inventory) *@
@*             </td> *@
@*             <td> *@
@*                 @Html.DisplayFor(modelItem => item.OrderedQuantity) *@
@*             </td> *@
@*             <td> *@
@*                 @Html.DisplayFor(modelItem => item.ProductType.TypeID) *@
@*             </td> *@
@*             <td> *@
@*                 @Html.DisplayFor(modelItem => item.ProductSpecification.SpecificationID) *@
@*             </td> *@
@*             <td> *@
@*                 @Html.DisplayFor(modelItem => item.Brand.BrandID) *@
@*             </td> *@
@*             <td> *@
@*                 @Html.DisplayFor(modelItem => item.Supplier.SupplierID) *@
@*             </td> *@
@*             <td> *@
@*                 <a asp-action="Edit" asp-route-id="@item.ProductID">Edit</a> | *@
@*                 <a asp-action="Details" asp-route-id="@item.ProductID">Details</a> | *@
@*                 <a asp-action="Delete" asp-route-id="@item.ProductID">Delete</a> *@
@*             </td> *@
@*         </tr> *@
@* } *@
@*     </tbody> *@
@* </table> *@
